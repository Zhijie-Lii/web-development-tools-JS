{"version":3,"sources":["services.js","Nav.jsx","DisplayChatBox.jsx","Chat.jsx","Login.jsx","DisplayUserInfo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["checkSession","fetch","method","catch","Promise","reject","error","then","response","ok","json","err","errorMessages","DEFAULT","USERNAME_REQUIRED","NETWORK_ERROR","LOGIN_REQUIRED","LOGIN_UNAUTHORIZED","Nav","user","username","onUserInfo","onChatPage","onTheme","onLogout","isLoggedIn","className","href","onClick","DisplayChatBox","userList","messageList","userInfo","console","log","users","map","messages","message","src","width","height","alt","sender","timeStamp","text","Chat","theme","info","setError","useState","setUserList","setMessageList","setText","useEffect","code","errorMsg","rows","cols","onChange","e","target","value","headers","Headers","body","JSON","stringify","Date","toLocaleTimeString","fetchNewMessage","newMessageList","Login","onLogin","setUsername","isDisabled","setIsDisabled","isPending","setIsPending","status","setStatus","class","disabled","createSession","userinfo","DisplayUserInfo","avatar","nickname","lastActive","App","userState","setUserState","isDisplay","setIsDisplay","now","chatPage","changeTheme","newTheme","type","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed132926.chunk.js","sourcesContent":["export const checkSession = function() {\n    return fetch('/api/session', {\n        method: 'GET'\n    })\n    .catch( () => {\n        return Promise.reject( { error: 'network-error'});\n    })\n    .then( response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return response.json().then( err => Promise.reject(err));\n    });\n}\n\nexport const createSession = function({ username }) {\n    return fetch('/api/session', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ username }),\n    })\n    .catch( () => {\n        return Promise.reject( { error: 'network-error'});\n    })\n    .then( response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return response.json().then( err => Promise.reject(err));\n    });\n}\n\nexport const endSession = function() {\n    return fetch('/api/session',  {\n        method: 'DELETE',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n};\n\nexport const fetchUserList = function() {\n    return fetch('/api/userList', {\n        method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n};\n\nexport const fetchMessageList = function() {\n    return fetch('/api/messageList', {\n        method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json( );\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n}\n\nexport const fetchNewMessage = function( username, text) {\n    return fetch('/api/messages', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ \n            sender: username, \n            text,\n            timeStamp: new Date().toLocaleTimeString(),\n        })\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n}\n\nexport const errorMessages = {\n    DEFAULT: 'Oh no! Something went wrong, please try again',\n    USERNAME_REQUIRED: 'Username is required',\n    NETWORK_ERROR: 'There was a problem reaching your network, please try again', \n    LOGIN_REQUIRED: 'You must be logged in to view this content', \n    LOGIN_UNAUTHORIZED: 'You are not permitted to view this content',\n};","const Nav = ({user, username, onUserInfo, onChatPage, onTheme, onLogout}) => {\n\n    if(!user.isLoggedIn) {\n        return null;\n      }\n\n    return (\n        <div className=\"nav\">\n          <ul className=\"nav-link\" >\n            <li><a href=\"#user-info\" onClick={onUserInfo}>Info</a></li>\n            <li><a href=\"#chat-page\" onClick={onChatPage}>chat-page</a></li>\n            <li>\"Username\": {username}</li>\n            <li><button className onClick={onTheme}>Change Theme</button></li>\n            <li className=\"logout\"><a href=\"#logout\" onClick={onLogout}>Logout</a></li>\n          </ul>\n        </div>\n      );\n};\n\nexport default Nav;","const DisplayChatBox = ({ userList, messageList, userInfo}) => {\n\n    console.log(\"display: \" + userList);\n    const users = userList.map((user) => <span>{user}</span>);\n    const messages = (messageList).map( (message) => \n        <li>\n        <img src=\"./avatar_girl1.jpg\" width=\"15px\" height=\"18px\" alt=\"girl\"></img>\n        <span key={message.sender} className=\"sender\">{message.sender}</span>\n        <span key={message.timeStamp} className=\"time-stamp\">{message.timeStamp}</span><br/>\n        <span key={message.text} className=\"text\">{message.text}</span> \n        </li>);\n    // const messages\n\n    return (\n        <div className=\"chat-page\">\n            <div className=\"chat-header\">\n                Group chat:  Jennie, Deepika, Jason, Yao, {users},\n            \n            </div>\n            <ul>{messages}</ul>\n        </div>\n    )\n}\n\nexport default DisplayChatBox;","import DisplayChatBox from \"./DisplayChatBox\";\nimport { useState, useEffect } from 'react';\nimport { fetchUserList, fetchMessageList, fetchNewMessage, errorMessages } from './services';\n\nconst Chat = ({username, theme, info, setError} ) => {\n    const [userList, setUserList] = useState([]);\n    const [messageList, setMessageList] = useState([]);\n    // const [error, setError] = useState('');\n    const [text,setText] = useState('');\n\n    let errorMsg;\n\n    function addNewMessage() {\n      console.log(text, username)\n      fetchNewMessage( username, text )\n      .then( (newMessageList) => {\n        console.log(newMessageList);\n        setMessageList( newMessageList );\n        setText('');\n      })\n      .catch( err => {\n        setError( errorMessages[err.code || 'DEFAULT'] );\n      });\n    }\n\n    \n    useEffect( () => {\n        fetchUserList()\n        .then( user => setUserList(user) )\n        .catch( err =>\n            setError( errorMessages[err.code || 'DEFAULT'] )\n        );\n\n        fetchMessageList()\n        .then( message => {\n          // console.log(message);\n          setMessageList( message );\n          })\n          .catch( (err) => {\n            setError( errorMessages[err.code || 'DEFAULT'] )\n          });\n      }, []);\n\n    return (\n        <ul className={theme}>\n            <DisplayChatBox userList={userList} messageList={messageList} userInfo={info}></DisplayChatBox>\n            <p className=\"error-msg\">{errorMsg}</p>\n\n            <div className=\"outgoing\">\n              <textarea rows=\"3\" cols=\"50\" onChange={(e) => setText(e.target.value)} value={text}></textarea>\n              <img onClick={addNewMessage} src=\"./send_icon.svg\" width=\"50px\" height=\"50px\"></img>\n            </div>\n        </ul>\n    )\n}\n\nexport default Chat;","import { useState } from 'react';\nimport { createSession, errorMessages } from './services';\n\nconst Login = function({ onLogin }) {\n  const [username, setUsername] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n  const [status, setStatus] = useState('');\n\n  const onChange = (e) => {\n    setUsername(e.target.value);\n    setIsDisabled(!e.target.value);\n  };\n\n  const login = () => {\n    setIsPending(true);\n    createSession({ username })\n    .then( userinfo => {\n      setStatus('');\n      setIsPending(false);\n      onLogin({ username, info: userinfo.info });\n      console.log(userinfo)\n    })\n    .catch( err => {\n      setStatus(errorMessages[err.code || 'DEFAULT']);\n      setIsPending(false);\n    });\n  };\n\n  return (\n    <div className=\"header\">\n      <h1>Join the webchat room</h1>\n      { status && <div class=\"status\">{status}</div>}\n      <label>\n        Username:\n        <input disabled={isPending} onChange={onChange} value={username} />\n      </label>\n      <button onClick={login} disabled={isDisabled || isPending} >{ isPending ? \"...\" : \"Login\"}</button>\n    </div>\n  );\n};\nexport default Login;","const DisplayUserInfo = ({ userInfo }) => {\n\n    console.log(userInfo);\n    // const information = userInfo.map((info) => <li>{info}</li>);\n\n    return (\n        <div className=\"user-info\">\n            <div className=\"chat-header\">\n               <p>User information and setting</p>\n            </div>\n            <li>User image:  <img src={userInfo.avatar} width=\"30px\" height=\"36px\" ></img></li>\n            <li>Nickname: {userInfo.nickname}</li>\n            <li>Theme: {userInfo.theme}</li>\n            <li>lastActive: {userInfo.lastActive}</li>\n\n        </div>\n    )\n}\n\nexport default DisplayUserInfo;","import { useState, useEffect } from 'react';\nimport { checkSession, endSession, errorMessages } from './services';\nimport Nav from './Nav';\nimport Chat from './Chat';\nimport Login from './Login';\nimport DisplayUserInfo from './DisplayUserInfo'\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nfunction App() {\n  const [userState, setUserState] = useState({\n    isLoggedIn : false,\n    isPending: true,\n  });\n\n  const [error, setError] = useState('');\n  const [isDisplay, setIsDisplay] = useState(false)\n\n  useEffect( () => {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        username: userinfo.username,\n        nickname: userinfo.username,\n        // avatar: '',\n        theme: 'light',\n        lastActive: Date.now(),\n      });\n    })\n    .catch( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function({username, info}) {\n    console.log(info)\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username,\n      info,\n    });\n  };\n\n  const logout = function() {\n    // Inform UI to wait\n    setUserState({\n      ...userState,  \n      isPending: true,\n    });\n    endSession()\n    .then( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    })\n    .catch( (err) => {\n      setError( errorMessages[err.code || 'DEFAULT'] )\n      setUserState({\n        ...userState,\n        isPending: false,\n      });\n    });\n  };\n\n  const displayUserInfo = function() {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        ...userState,\n        nickname: userinfo.username,\n        info: userinfo.info\n      });\n      setIsDisplay(true);\n    }) \n  };\n\n  const displayChatPage = function() {\n      setIsDisplay(false);\n  };\n\n  const changeTheme = function(){\n    const newTheme = userState.theme==='light'? 'dark' : 'light';\n    setUserState({\n      ...userState,\n      theme: newTheme,\n  })\n};\n\n  if(userState.isPending) {\n    return (\n      <div className=\"pending\">\n          Waiting for loading...\n         <Loader type=\"Circles\" color=\"#00BFFF\" height={30} width={30}/>\n      </div>\n    );\n  }\n\n  let chatPage;\n\n  if(userState.isLoggedIn) {\n    chatPage = isDisplay? <DisplayUserInfo userInfo={userState.info}/> : \n    <Chat username={userState.username} theme={userState.theme} onTheme={changeTheme} info={userState.info}/>;\n  } else {\n    chatPage = (<div><Login onLogin={login}/><Login/></div>);\n                \n  }\n \n  // check and switch Nav \n  return (\n    <div className=\"app\">\n      <Nav user={userState} onTheme={changeTheme} username={userState.username} \n        onChatPage={displayChatPage} onUserInfo={displayUserInfo} onLogout={logout}/>\n      {chatPage}\n      <p className=\"error-msg\">{error}</p>\n      \n    </div>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}