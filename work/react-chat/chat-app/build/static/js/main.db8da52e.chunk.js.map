{"version":3,"sources":["services.js","Nav.jsx","DisplayChatBox.jsx","Chat.jsx","Login.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["errorMessages","DEFAULT","USERNAME_REQUIRED","NETWORK_ERROR","LOGIN_REQUIRED","LOGIN_UNAUTHORIZED","Nav","user","username","onTheme","onLogout","isLoggedIn","className","onClick","href","DisplayChatBox","userList","messages","messageList","map","message","sender","timeStamp","text","Chat","theme","showError","useState","setUserList","setMessageList","error","setError","setText","useEffect","fetch","method","catch","Promise","reject","then","response","ok","json","err","code","rows","cols","onChange","e","target","value","headers","Headers","body","JSON","stringify","Date","toLocaleTimeString","fetchNewMessage","newMessageList","console","log","Login","onLogin","setUsername","isDisabled","setIsDisabled","isPending","setIsPending","status","setStatus","class","disabled","createSession","userinfo","info","App","userState","setUserState","changeTheme","newTheme","chatPage","lastActive","now","type","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db8da52e.chunk.js","sourcesContent":["export const checkSession = function() {\n    return fetch('/api/session', {\n        method: 'GET'\n    })\n    .catch( () => {\n        return Promise.reject( { error: 'network-error'});\n    })\n    .then( response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return response.json().then( err => Promise.reject(err));\n    });\n}\n\nexport const createSession = function({ username }) {\n    return fetch('/api/session', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ username }),\n    })\n    .catch( () => {\n        return Promise.reject( { error: 'network-error'});\n    })\n    .then( response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return response.json().then( err => Promise.reject(err));\n    });\n}\n\nexport const endSession = function() {\n    return fetch('/api/session',  {\n        method: 'DELETE',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n};\n\nexport const fetchUserList = function() {\n    return fetch('/api/userList', {\n        method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n};\n\nexport const fetchMessageList = function() {\n    return fetch('/api/messageList', {\n        method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json( );\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n}\n\nexport const fetchNewMessage = function( username, text) {\n    return fetch('/api/messages', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ \n            sender: username, \n            text,\n            timeStamp: new Date().toLocaleTimeString(),\n        })\n    })\n    .catch( () => Promise.reject({ error: 'network-error'} ) )\n    .then( response => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json().then( json => Promise.reject(json) );\n    });\n}\n\nexport const errorMessages = {\n    DEFAULT: 'Oh no! Something went wrong, please try again',\n    USERNAME_REQUIRED: 'Username is required',\n    NETWORK_ERROR: 'There was a problem reaching your network, please try again', \n    LOGIN_REQUIRED: 'You must be logged in to view this content', \n    LOGIN_UNAUTHORIZED: 'You are not permitted to view this content',\n};","const Nav = ({user, username, onTheme, onLogout}) => {\n    \n    if(!user.isLoggedIn) {\n        return null;\n      }\n\n    return (\n        <div className=\"nav\">\n          <ul className=\"nav-link\" >\n            <li>\"Username\": {username}</li>\n            <li><button className onClick={onTheme}>Change Theme<img></img></button></li>\n            <li className=\"logout\"><a href=\"#logout\" onClick={onLogout}>Logout</a></li>\n          </ul>\n        </div>\n      );\n};\n\nexport default Nav;","const DisplayChatBox = ({ userList, messageList}) => {\n\n    // const users = userList.map((user) => <li>{user}</li>);\n    const messages = (messageList).map( (message) => \n        <li>\n        <span key={message.sender} className=\"sender\">{message.sender}</span>\n        <span key={message.timeStamp} className=\"time-stamp\">{message.timeStamp}</span><br/>\n        <span key={message.text} className=\"text\">{message.text}</span> \n        </li>);\n\n    return (\n        <div className=\"chat-page\">\n            Group chat: Jennie, Deepika, {userList}\n            <ul>{messages}</ul>\n        </div>\n    )\n}\n\nexport default DisplayChatBox;","import DisplayChatBox from \"./DisplayChatBox\";\nimport { useState, useEffect } from 'react';\nimport { fetchUserList, fetchMessageList, fetchNewMessage, errorMessages } from './services';\n\nconst Chat = ({username, theme, showError} ) => {\n    const [userList, setUserList] = useState([]);\n    const [messageList, setMessageList] = useState([]);\n    const [error, setError] = useState('');\n    const [text,setText] = useState('');\n\n    function addNewMessage() {\n      fetchNewMessage( username, text )\n      .then( (newMessageList) => {\n        console.log(newMessageList);\n        setMessageList( newMessageList );\n        setText('');\n      })\n      .catch( err => showError( errorMessages[err.code || 'DEFAULT'] ));\n    }\n\n    \n    useEffect( () => {\n        fetchUserList()\n        .then( user => setUserList(user) )\n        .catch( err =>\n          setError( errorMessages[err.code || 'DEFAULT'] )\n        );\n\n        fetchMessageList()\n        .then( message => {\n          // console.log(message);\n          setMessageList( message );\n          })\n          .catch( (err) => {\n            showError( errorMessages[err.code || 'DEFAULT'] )\n          });\n      }, []);\n\n    return (\n        <ul className={theme}>\n            <DisplayChatBox userList={userList} messageList={messageList}></DisplayChatBox>\n            \n            <p className=\"error-msg\">{error}</p>\n\n            <div className=\"outgoing\">\n              <textarea rows=\"5\" cols=\"30\" onChange={(e) => setText(e.target.value)} value={text}></textarea>\n              <button onClick={addNewMessage}>Send</button>\n            </div>\n        </ul>\n    )\n}\n\nexport default Chat;","import { useState } from 'react';\nimport { createSession, errorMessages } from './services';\n\nconst Login = function({ onLogin }) {\n  const [username, setUsername] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isPending, setIsPending] = useState(false);\n  const [status, setStatus] = useState('');\n\n  const onChange = (e) => {\n    setUsername(e.target.value);\n    setIsDisabled(!e.target.value);\n  };\n\n  const login = () => {\n    setIsPending(true);\n    createSession({ username })\n    .then( userinfo => {\n      setStatus('');\n      setIsPending(false);\n      onLogin({ username, info: userinfo.info });\n    })\n    .catch( err => {\n      setStatus(errorMessages[err.code || 'DEFAULT']);\n      setIsPending(false);\n    });\n  };\n\n  return (\n    <div className=\"header\">\n      <h1>Chat-app</h1>\n      { status && <div class=\"status\">{status}</div>}\n      <label>\n        Username:\n        <input disabled={isPending} onChange={onChange} value={username} />\n      </label>\n      <button onClick={login} disabled={isDisabled || isPending} >{ isPending ? \"...\" : \"Login\"}</button>\n    </div>\n  );\n};\nexport default Login;","import { useState, useEffect } from 'react';\nimport { checkSession, endSession, errorMessages } from './services';\nimport Nav from './Nav';\nimport Chat from './Chat';\nimport Login from './Login';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nfunction App() {\n  const [userState, setUserState] = useState({\n    isLoggedIn : false,\n    isPending: true,\n  });\n\n  function changeTheme(){\n    const newTheme = userState.theme==='light'? 'dark' : 'light';\n    setUserState({\n      ...userState,\n      theme: newTheme,\n  })\n};\n\n  const [error, setError] = useState('');\n\n  useEffect( () => {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        username: userinfo.username,\n        theme: 'light',\n        lastActive: Date.now(),\n      });\n    })\n    .catch( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []);\n\n  const login = function({username, info}) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username,\n      info,\n    });\n  };\n\n  const logout = function() {\n    setUserState({\n      ...userState,  \n      isPending: true,\n    });\n    endSession()\n    .then( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    })\n    .catch( (err) => {\n      setError( errorMessages[err.code || 'DEFAULT'] )\n      setUserState({\n        ...userState,\n        isPending: false,\n      });\n    });\n  };\n\n  if(userState.isPending) {\n    return (\n      <div className=\"app\">\n         <Loader type=\"Circles\" color=\"#00BFFF\" height={20} width={20}/>\n      </div>\n    );\n  }\n\n  let chatPage;\n\n  if(userState.isLoggedIn) {\n    chatPage = <Chat username={userState.username} showError={setError}\n    theme={userState.theme} onTheme={changeTheme}/>;\n  } else {\n    chatPage = (<div><Login onLogin={login}/></div>);\n                \n  }\n \n  // check and switch Nav \n  return (\n    <div className=\"app\">\n      <Nav user={userState} onTheme={changeTheme} username={userState.username} onLogout={logout}/>\n      {chatPage}\n      <p className=\"error\">{error}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}