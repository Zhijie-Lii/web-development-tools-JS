{"version":3,"sources":["CatFacts.jsx","App.jsx","services.js","reportWebVitals.js","index.js"],"names":["CatFacts","facts","start","size","factList","slice","formattedFacts","fact","push","headerContent","id","className","App","useState","catFact","setCatFact","isLoading","setIsLoading","setStart","setSize","error","setError","factMsg","onChange","e","parseInt","target","value","disabled","onClick","length","type","color","height","width","fetch","method","catch","Promise","reject","then","response","ok","json","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA0BeA,MAxBf,YAA2C,IAAD,EAAtBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAIxBC,EAAWH,EAAMI,MAAMH,EAAOA,EAAMC,GACpCG,EAAiB,GALe,cAMpBF,GANoB,IAMtC,IAAI,EAAJ,qBAA4B,CAAC,IAAnBG,EAAkB,QACxBD,EAAeE,KAAK,6BAAgBD,GAAPA,KAPK,8BAUtC,IAAIE,EAAgB,GAOpB,OAJIA,EADDR,EACiB,qBAEA,gBAGhB,sBAAKS,GAAG,YAAR,UACA,oBAAGC,UAAU,SAAb,UAAuBF,EAAvB,OACA,oBAAIE,UAAU,QAAd,SAAuBL,Q,gBC+ChBM,MA/Df,WAAgB,IAAD,EACiBC,qBADjB,mBACNC,EADM,KACGC,EADH,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGaJ,mBAAS,GAHtB,mBAGNX,EAHM,KAGCgB,EAHD,OAIWL,mBAAS,GAJpB,mBAINV,EAJM,KAIAgB,EAJA,OAKaN,mBAAS,IALtB,mBAKNO,EALM,KAKCC,EALD,KAOPC,EAAO,qBAAiBpB,EAAM,EAAvB,YAA4BA,EAAMC,GAwB/C,OAAKW,EAYH,sBAAKJ,GAAG,MAAR,UACE,qBAAKC,UAAU,eAAf,SACA,cAAC,EAAD,CAAUV,MAAOa,EAASZ,MAAOA,EAAOC,KAAMA,MAI9C,yBAAQoB,SAAU,SAACC,GAAD,OAAOL,EAAQM,SAASD,EAAEE,OAAOC,SAAnD,UACE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAEA,sBAAKhB,UAAU,aAAf,UACA,wBAAQiB,SAAU1B,EAAMC,EAAO,EAAe0B,QAAU,kBAAMX,EAAShB,EAAMC,IAA7E,wBACA,uBAAMQ,UAAU,aAAhB,cAA+BW,EAA/B,OACA,wBAAQM,SAAU1B,EAAM,EAAEC,EAAOW,EAAQgB,OAAoBD,QAAU,kBAAMX,EAAShB,EAAMC,IAA5F,uBAEF,mBAAGQ,UAAU,WAAb,SAAyBS,OAzBzB,sBAAKT,UAAU,YAAf,0BAAwC,uBACtC,qBAAKA,UAAU,YAAf,SACGK,EAAY,cAAC,IAAD,CAAQe,KAAK,UAAUC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KACrE,wBAAQL,QA3BD,WACfZ,GAAa,GCfNkB,MAAM,WAAY,CACrBC,OAAQ,QAEXC,OAAO,WACJ,OAAOC,QAAQC,OAAQ,CAAEnB,MAAO,qBAEnCoB,MAAM,SAAAC,GACH,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAM,SAAAI,GAAG,OAAIN,QAAQC,OAAOK,SDOtDJ,MAAM,SAAAvC,GACLc,EAAWd,GACXgB,GAAa,MAGZoB,OAAO,SAAAO,GACNvB,EAASuB,OAkBL,8BE9BGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.380ddf4d.chunk.js","sourcesContent":["import './App.css';\n\nfunction CatFacts({ facts, start, size }) {\n    // const formattedFacts = facts.slice(start, start+size).map( \n    //     (fact) => (<li key={fact}>{fact}</li>));\n   \n    const factList = facts.slice(start, start+size);\n    const formattedFacts = [];\n    for(const fact of factList) {\n        formattedFacts.push(<li key={fact}>{fact}</li>);\n    };\n\n    let headerContent = '';\n\n    if(facts) {\n        headerContent = \"Showing Cat Facts:\"\n    } else {\n        headerContent = \"0 fact loaded\"\n    }\n    return(\n        <div id=\"cat-facts\">\n        <p className=\"header\">{headerContent} </p>\n        <ol className=\"facts\">{formattedFacts}</ol>\n        </div>\n    );\n}\nexport default CatFacts;","import { useState } from 'react';\nimport {fetchCat } from './services';\nimport CatFacts from './CatFacts';\nimport Loader from 'react-loader-spinner';\nimport './App.css';\n\nfunction App() {\n  const [catFact, setCatFact] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [start, setStart] = useState(0);\n  const [size, setSize] = useState(5);\n  const [error, setError] = useState('');\n\n  const factMsg = `Show Facts ${start+1}-${start+size}`;\n\n  const loadFact = function() {\n    setIsLoading(true);\n    fetchCat()\n    .then( facts => {\n      setCatFact(facts);\n      setIsLoading(false);\n\n      })\n      .catch( err => {\n        setError(err);\n    })\n  };\n\n  // const disableNextBtn = function (){\n  //   if ( start+ 2*size > catFact.length){\n  //     start = catFact.length - size;\n  //     return true;\n  //   };\n  //   return false;\n  // };\n\n\n  if (!catFact){\n    return (\n      <div className=\"notLoaded\">0 Fact Loaded<br/>\n        <div className=\"isLoading\"> \n          {isLoading ? <Loader type=\"Circles\" color=\"#00BFFF\" height={30} width={30}/>: \n            <button onClick={loadFact}>Load Facts</button>}\n        </div>\n      </div>\n    )\n  };\n\n  return (\n    <div id=\"app\">\n      <div className=\"fact-content\">\n      <CatFacts facts={catFact} start={start} size={size}></CatFacts>\n      </div>\n      \n      \n      <select onChange={(e) => setSize(parseInt(e.target.value))}>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n      </select>\n        <div className=\"factAdjust\">\n        <button disabled={start-size < 0? true:false} onClick={ () => setStart(start-size)}>Previous &lt;</button>\n        <span className=\"fact-range\"> {factMsg} </span>\n        <button disabled={start+2*size > catFact.length? true:false} onClick={ () => setStart(start+size)}>&gt; Next</button>\n        </div>\n      <p className=\"errorMsg\">{error}</p>\n    </div>\n  );\n}\n\nexport default App;\n","export const fetchCat = function() {\n    return fetch('/session', {\n        method: 'GET',\n    })\n    .catch( () => {\n        return Promise.reject( { error: 'network-error'});\n    })\n    .then( response => {\n        if (response.ok) {\n            return response.json();\n        }\n        return response.json().then( err => Promise.reject(err));\n    });\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}